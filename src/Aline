(* Alunos: Israel Deorce e Vinicius Kroth 
   Linguagem de Programação - 2017/2 *)

(* Função para ler arquivos, removendo os \n*)
fun readFile(filename) =
    let val file = TextIO.openIn filename
        val poem = TextIO.inputAll file
        val _ = TextIO.closeIn file
    in String.tokens (fn c => c = #"\n") poem
    end
  
(* Lendo o arquivo e concatenando *)
val texto = readFile("H37Rv.txt"); 
fun concat (list) = foldr op^ "" list; 
val texto = concat(texto);

(* Função para escrever em arquivos *)
fun writeFile (filename : string , text: string) =
    let val file = TextIO.openOut(filename)
        val _ = TextIO.output(file, text)
    in TextIO.closeOut(file)
    end
    
(* lista de aminoacidos *)
val aminoacidos = "G\nA\nV\nL\nI\nP\nS\nT\nC\nM\nD\nE\nF\nY\nW\nK\nR\nH\nN\nQ\n";

(* chamando o writeFuke para escrever os aminoacidos no arquivo *)
writeFile("aminoacidos.txt" ,aminoacidos);

(* Even lists of lists of things *)
val arvore = { G={
                    G={G="G", A="G", C="G", T="G"}
                  , A={G="E", A="E", C="D", T="D"}
                  , C={G="A", A="A", C="A", T="A"}
                  , T={G="V", A="V", C="V", T="V"}
	       }
	     , A={
                    G={G="R", A="R", C="S", T="S"}
                  , A={G="A", A="A", C="N", T="N"}
                  , C={G="T", A="T", C="T", T="T"}
                  , T={G="M", A="I", C="I", T="I"}
	       }
	     , T={
                    G={G="W", A="STOP", C="C", T="C"}
                  , A={G="STOP", A="STOP", C="Y", T="Y"}
                  , C={G="S", A="S", C="S", T="S"}
                  , T={G="L", A="L", C="F", T="F"}
	       }
	     , C={
                    G={G="R", A="R", C="R", T="R"}
                  , A={G="Q", A="Q", C="H", T="H"}
                  , C={G="P", A="P", C="P", T="P"}
                  , T={G="L", A="L", C="L", T="L"}
	       }	     
	     };
	     
	  

fun identifica_aminoacido {b1 : string, b2 : string, b3 : string} = ;
		
fun identifica_aminoacido (b1 : string, b2 : string, b3 : string) = #b1 (#b (#G arvore));

val nivel3 = #b3 nivel2(val nivel2 = #b2 nivel1(val nivel1 = #b1 arvore))
	
identifica_aminoacido("G","A","A")

(* funciona *)
#G (#G (#G arvore));
               
               
               
        